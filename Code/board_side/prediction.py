import storage
import os
import time
import board
import analogio
from digitalio import DigitalInOut, Direction, Pull
import ulab.numpy as np

class SimpleNN:
    def __init__(self):
        self.w1=np.zeros((1,21))
        self.b1=np.zeros((21))
        
        self.w2=np.zeros((21,5))
        self.b2=np.zeros((5))
        
        self.w3=np.zeros((5,1))
        self.b3=np.zeros((1))
    def relu(self,x):
        return np.maximum(x,0)#torch.relu(torch.tensor(x)).detach().numpy()#
    def forward(self,x):
        h=self.relu(np.dot(x,self.w1)+self.b1)
        h=self.relu(np.dot(h,self.w2)+self.b2)
        h=np.dot(h,self.w3)+self.b3
        return h
    def reshape(self):
        self.w1=np.around(self.w1.reshape((1,21)),decimals=4)
        self.b1=np.around(self.b1.reshape((1,21)),decimals=4)
        self.w2=np.around(self.w2.reshape((21,5)),decimals=4)
        self.b2=np.around(self.b2.reshape((1,5)),decimals=4)
        self.w3=np.around(self.w3.reshape((5,1)),decimals=4)
        self.b3=np.around(self.b3.reshape((1,1)),decimals=4)
        
model=SimpleNN()
model.w1=np.array( [[12.249862670898438, 0.5316052436828613, -0.7805298566818237, 10.364794731140137, -0.47129738330841064, 9.90050983428955, 11.929798126220703, 8.36910343170166, 12.615592956542969, 0.056524403393268585, 0.09682798385620117, -0.7277249097824097, 0.6852872371673584, 9.211381912231445, 0.4455186128616333, 0.9910496473312378, 13.197345733642578, 0.8186813592910767, 10.005188941955566, 0.954098105430603, 10.419120788574219]] )
model.b1=np.array( [-0.250192254781723, -0.5641783475875854, -0.8868794441223145, -0.15395890176296234, -0.08423769474029541, -0.1470056027173996, -0.2428499460220337, -0.12430106103420258, -0.2567538619041443, 1.2091894149780273, -0.6221003532409668, -0.01666891574859619, -0.4072682857513428, -0.13665896654129028, -0.8967654705047607, -0.8550807237625122, -0.2693363428115845, -0.7104971408843994, -0.1485614776611328, -0.2724933624267578, -0.15476800501346588] )
model.w2=np.array( [[4.851072788238525, -18.061147689819336, 5.183419704437256, -0.1677476316690445, 4.741362571716309], [0.05014940723776817, 0.14307071268558502, 0.19793862104415894, 0.051990754902362823, -0.027057785540819168], [0.08083156496286392, -0.0991482362151146, 0.0015055370749905705, -0.06325113028287888, 0.05878901854157448], [-4.490252494812012, -10.248015403747559, -3.6219000816345215, -0.02965160273015499, -4.543269157409668], [0.05012521520256996, 0.12515683472156525, 0.13199201226234436, -0.02602161280810833, 0.08611154556274414], [-4.41653299331665, -10.379268646240234, -3.495814561843872, 0.012195774354040623, -4.213978290557861], [4.878767490386963, -17.54897689819336, 5.2325029373168945, 0.0627356469631195, 4.608777046203613], [-4.296027183532715, -10.438146591186523, -3.749444007873535, -0.07075759023427963, -4.182709693908691], [4.844799995422363, -17.5904541015625, 5.333775043487549, -0.18806709349155426, 4.456574440002441], [5.006405830383301, -1.1940282583236694, 5.545917510986328, -0.08846726268529892, 4.849241256713867], [0.2009710818529129, -0.10871255397796631, -0.014221296645700932, -0.11138398945331573, 0.12404364347457886], [0.01511954702436924, 0.034811608493328094, 0.006672748364508152, -0.12156178802251816, 0.03825513273477554], [0.07412002980709076, -0.02029578574001789, -0.0476255938410759, 0.041296955198049545, -0.052457597106695175], [-4.310063362121582, -10.508108139038086, -3.3206398487091064, 0.12813661992549896, -4.426511764526367], [-0.09845640510320663, -0.1318056881427765, 0.15548597276210785, 0.20976826548576355, 0.09792796522378922], [-0.1676003783941269, -0.11323298513889313, 0.21437384188175201, 0.18955746293067932, -0.16754478216171265], [5.167874813079834, -18.028841018676758, 5.925323486328125, -0.17300380766391754, 5.1802496910095215], [0.14641088247299194, 0.20611324906349182, -0.16923408210277557, -0.17857548594474792, -0.028899548575282097], [-4.423672676086426, -10.366703033447266, -3.616091251373291, -0.02575707994401455, -4.3028998374938965], [0.024059666320681572, 0.014752078801393509, -0.1179129108786583, 0.13344445824623108, -0.07735003530979156], [-4.626241683959961, -10.439130783081055, -3.905627489089966, 0.17959462106227875, -4.847367763519287]] )
model.b2=np.array( [1.849130630493164, 7.009843826293945, 2.0290932655334473, -0.14100997149944305, 2.015672206878662] )
model.w3=np.array( [[4.691020965576172], [-17.349464416503906], [3.6766843795776367], [-0.0703313946723938], [4.766873359680176]] )
model.b3=np.array( [2.4305262565612793] )
model.reshape()

led = DigitalInOut(board.GP21)
led.direction = Direction.OUTPUT
analog_in = analogio.AnalogIn(board.GP26)
led.value=0

def get_voltage(pin):
    # Convert raw 16-bit ADC value (0-65535) to a voltage (0-3.3V)
    return (pin.value * 3.3) / 65535

file=None
alpha=0.7
past=get_voltage(analog_in)
while True:
    voltage = get_voltage(analog_in)  # Convert to voltage
    low_pass=voltage*alpha + (1-alpha)*past
    past=low_pass
    preds=model.forward(np.array([low_pass]).reshape((1,1)))
    time.sleep(0.2)  # Delay to avoid flooding output
    print({"Voltage":low_pass,"Weight":preds[0]})

